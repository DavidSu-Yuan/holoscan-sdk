{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    // https://code.visualstudio.com/docs/editor/variables-reference
    "configurations": [
        {
            "name": "(gdb) apps/endoscopy_tool_tracking/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/apps/endoscopy_tool_tracking/cpp/endoscopy_tool_tracking",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) apps/endoscopy_tool_tracking/python",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            // https://github.com/catchorg/Catch2/blob/devel/docs/command-line.md#specifying-which-tests-to-run
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${command:cmake.buildDirectory}/apps/endoscopy_tool_tracking/python/endoscopy_tool_tracking.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${command:cmake.buildDirectory}/lib/gxf_extensions:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_SAMPLE_DATA_PATH",
                    "value": "${workspaceFolder}/data"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) apps/ultrasound_segmentation/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/apps/ultrasound_segmentation/cpp/ultrasound_segmentation",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) apps/ultrasound_segmentation/python",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            // https://github.com/catchorg/Catch2/blob/devel/docs/command-line.md#specifying-which-tests-to-run
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${command:cmake.buildDirectory}/apps/ultrasound_segmentation/python/ultrasound_segmentation.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${command:cmake.buildDirectory}/lib/gxf_extensions:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_SAMPLE_DATA_PATH",
                    "value": "${workspaceFolder}/data"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) apps/multiai/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/apps/multiai/cpp/multiai",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) apps/multiai/python",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            // https://github.com/catchorg/Catch2/blob/devel/docs/command-line.md#specifying-which-tests-to-run
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${command:cmake.buildDirectory}/apps/multiai/python/multiai.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${command:cmake.buildDirectory}/lib/gxf_extensions:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_SAMPLE_DATA_PATH",
                    "value": "${workspaceFolder}/data"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/basic_workflow/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/examples/basic_workflow/cpp/basic_workflow",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/basic_workflow/python",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${workspaceFolder}/examples/basic_workflow/python/basic_workflow.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/native_operator/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/examples/native_operator/cpp/ping",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/native_operator/python: ping",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${workspaceFolder}/examples/native_operator/python/ping.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/native_operator/python: convolve",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${workspaceFolder}/examples/native_operator/python/convolve.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/tensor_interop/cpp",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/examples/tensor_interop/cpp/tensor_interop",
            "args": [
                "-severity",
                "4"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/tensor_interop/python",
            "type": "cppdbg",
            "request": "launch",
            "preLaunchTask": "Install CuPy package",
            "program": "/usr/bin/bash",
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "${workspaceFolder}/examples/tensor_interop/python/tensor_interop.py",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}/python/lib",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
                {
                    "name": "HOLOSCAN_SAMPLE_DATA_PATH",
                    "value": "${command:cmake.buildDirectory}/../data"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) examples/video_sources/gxf: video_replayer",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/bin/gxe",
            "args": [
                "--app",
                "examples/video_sources/gxf/video_replayer.yaml",
                "--manifest",
                "examples/video_sources/gxf/video_replayer_manifest.yaml"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            // In .devcontainer/devcontainer.json file:
            //    Uncomment the following line to use /dev/video0. Also, execute 'sudo chmod 666 /dev/video0' inside the container.
            //    "--device=/dev/video0:/dev/video0",
            "name": "(gdb) examples/video_sources/gxf: v4l2_camera",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/bin/gxe",
            "args": [
                "--app",
                "examples/video_sources/gxf/v4l2_camera.yaml",
                "--manifest",
                "examples/video_sources/gxf/v4l2_camera_manifest.yaml"
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                }
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Python: tests",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/bash",
            "args": [
                "${workspaceFolder}/scripts/debug_python",
                "-m",
                "pytest",
                "-v",
                "-rP",
                "-k",
                // //"TestOperator and test_setup",
                // "test_my_ping_app",
                "python/lib/tests",
            ],
            "stopAtEntry": false,
            "cwd": "${command:cmake.buildDirectory}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                },
                {
                    "name": "HOLOSCAN_LOG_LEVEL",
                    "value": "TRACE"
                },
                {
                    "name": "HOLOSCAN_LIB_PATH",
                    "value": "${command:cmake.buildDirectory}/lib"
                },
                {
                    "name": "PYTHONPATH",
                    "value": "${command:cmake.buildDirectory}/python/lib"
                },
            ],
            "console": "externalTerminal",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Holoviz: functional tests",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.buildDirectory}/_deps/holoviz-build/tests/functional/clara_holoviz_functionaltests",
            "args": [
                "--gtest_filter=*"
            ],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [
                {
                    "name": "LD_LIBRARY_PATH",
                    "value": "${command:cmake.buildDirectory}/lib:${env:LD_LIBRARY_PATH}"
                }
            ],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description":  "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
    ]
}